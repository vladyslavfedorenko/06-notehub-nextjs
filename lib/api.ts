import axios from "axios";
import { Note } from "@/types/note";

// üîê –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –±–∞–∑–æ–≤—ã–π URL –∏–∑ .env.local
const token = process.env.NEXT_PUBLIC_NOTEHUB_TOKEN;
const baseURL = process.env.NEXT_PUBLIC_API_URL;

// ‚ö†Ô∏è –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç ‚Äî –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
if (!token) {
  console.warn("‚ö†Ô∏è NEXT_PUBLIC_NOTEHUB_TOKEN is missing!");
}

// –°–æ–∑–¥–∞—ë–º axios-–∏–Ω—Å—Ç–∞–Ω—Å
export const instance = axios.create({
  baseURL,
  headers: {
    Authorization: `Bearer ${token}`,
  },
});

export interface NotesResponse {
  notes: Note[];
  total: number;
  page: number;
  limit: number;
}

// üì• –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏
export const getNotes = async (
  search: string,
  page: number
): Promise<NotesResponse> => {
  const { data } = await instance.get<NotesResponse>("/notes", {
    params: { search, page },
  });
  return data;
};

// ‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É
export const createNote = async (
  note: Pick<Note, "title" | "content" | "tag">
): Promise<Note> => {
  const { data } = await instance.post<Note>("/notes", note);
  return data;
};

// ‚ùå –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
export const deleteNote = async (id: string): Promise<Note> => {
  const { data } = await instance.delete<Note>(`/notes/${id}`);
  return data;
};

// üîç –ü–æ–ª—É—á–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –ø–æ id
export const getNoteById = async (id: string): Promise<Note> => {
  const { data } = await instance.get<Note>(`/notes/${id}`);
  return data;
};
